require 'spec_helper'

describe IrcDH1080 do
  it 'has a version number' do
    expect(IrcDH1080::VERSION).not_to be nil
  end
end

describe IrcDH1080::Base64 do
  number = [
            '150327195034886365131097719824635857663047917225848414861717498654591491182092214555888757325373063228925643360720177580672103072052447920316797977023834642335024648488724977281135201876428219342772985159925592215758759801922454603264079453181835244925763956383649326104468184160351057844724836723071605116196258170302846983',
            '9174774802650159421486510111259154877353538031559702880198962565831159074530633897786354440821408037330231023228649209513547345077532401413250079363610472680430515686123477208621370463284280588793103478938022515511680961659287702703332553817033899878399993801587939064310154845806564161347244722611507231581362454230052101954',
            '3597573889177455376105743106631846128484468505025911285762082282680710974365793649015898381955870969124156447829577132960336756557369255620528886192746546926643399383748227373730548430672258033231072171189434136284666569466248709453875921791834372429668713782554437246485665954030197405646088352438008321674331478482770650630'
  ]
  decoded = [
             OpenSSL::BN.new(number[0], 10).to_s(2),
             OpenSSL::BN.new(number[1], 10).to_s(2),
             OpenSSL::BN.new(number[2], 10).to_s(2)
  ]
  encoded = [
             'AviKSb1ECgaWLbzFwi+nDNvKNzQrm9YwuTJ0+ScveVH4sunpH+eMndKVCLybnvjVrSKXS5QxYKruXSfppqxY2iwTMjytPhEajaGpmmAuxXVm9gTpEF6j2ZABnl13L7RUipEgQGG01RxLEM7gXBV3TUVuk0NcBJMdDplJ3YxeUUQraDb1m1gHA',
             'tVFQ9JsdcUtYfg/vzTSo7LbS+AhQNZFabKbV9Z3GSNVzQHfVIoOdQoZXeCMtnmgQMwGd0HC3JkdVWXn1CHhfRUB6wpARXC7oo/RAPUVP8qUGWq4cLCuqyYdKdeAYHLenRsRHW7AgvpGuCxcP03gdlQJSyhMc5w91SxpU4Ix8DG4s5taI699CA',
             'Rxj2MqTYUtTsrTq3Mq/PS4NQrrtcYHW/5kJYa2xNHEX09VIDaZmTOjJGK1oaZLuwEeGU5Zh14Uki3YQxnHE9kY5o0Zpn+747RV6Rs2qCB7UpZIH5QS72pOLVD0URWqUCZXREEukgqXhhAfQtwHxnc3ZO0l7Wz36UQn6qJDc9CBCQPBFUIuYGA'
  ]

  describe '::encode' do
    it 'returns the encoded string of a message' do
      expect(IrcDH1080::Base64.encode(decoded[0])).to eq encoded[0]
      expect(IrcDH1080::Base64.encode(decoded[1])).to eq encoded[1]
      expect(IrcDH1080::Base64.encode(decoded[2])).to eq encoded[2]
    end
  end

  describe '::decode' do
    it 'returns the decoded string of a message' do
      expect(IrcDH1080::Base64.decode(encoded[0])).to eq decoded[0]
      expect(IrcDH1080::Base64.decode(encoded[1])).to eq decoded[1]
      expect(IrcDH1080::Base64.decode(encoded[2])).to eq decoded[2]
    end
  end
end
